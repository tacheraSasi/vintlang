// Complete test of debounce functionality
println("Testing debounce behavior...")

// Create a simple function to test with
let counter = 0
let incrementCounter = func() {
    counter = counter + 1
    println("Counter incremented to:", counter)
}

// Create a debounced version with 200ms delay
let debouncedIncrement = debounce(200, incrementCounter)

// Test rapid calls - only the last one should execute
println("Making rapid calls...")
debouncedIncrement()
debouncedIncrement()
debouncedIncrement()
println("Made 3 rapid calls to debounced function")

// Give some time for the debounced function to execute
println("Waiting for execution...")

// Test with print function
println("\nTesting with print function:")
let debouncedPrint = debounce(100, print)

debouncedPrint("First message")
debouncedPrint("Second message")  
debouncedPrint("Final message")   // Only this should print

println("Test completed. The debounced functions should execute after their delays.")