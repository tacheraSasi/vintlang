// Excel Module Test - Comprehensive functionality test
import excel

print("üöÄ VintLang Excel Module Test")
print("==============================")

// Test 1: Create a new Excel file
print("üìù Test 1: Creating new Excel file...")
let file_id = excel.create("test_workbook.xlsx")
print("‚úÖ Created file with ID: " + file_id)

// Test 2: Sheet operations
print("")
print("üìã Test 2: Sheet operations...")
let sheets = excel.getSheets(file_id)
print("Initial sheets:")
print(sheets)

// Add new sheets
print("Adding new sheets...")
let index1 = excel.addSheet(file_id, "DataSheet")
let index2 = excel.addSheet(file_id, "SummarySheet") 
print("Created DataSheet at index: " + index1)
print("Created SummarySheet at index: " + index2)

// Rename default sheet
excel.renameSheet(file_id, "Sheet1", "MainSheet")
print("Renamed Sheet1 to MainSheet")

// Get updated sheet list
sheets = excel.getSheets(file_id)
print("Updated sheets:")
print(sheets)

// Test 3: Cell operations
print("")
print("üìä Test 3: Cell operations...")
excel.setCell(file_id, "MainSheet", "A1", "Employee Name")
excel.setCell(file_id, "MainSheet", "B1", "Department")
excel.setCell(file_id, "MainSheet", "C1", "Salary")
excel.setCell(file_id, "MainSheet", "D1", "Bonus")

excel.setCell(file_id, "MainSheet", "A2", "John Doe")
excel.setCell(file_id, "MainSheet", "B2", "Engineering")
excel.setCell(file_id, "MainSheet", "C2", 75000)

excel.setCell(file_id, "MainSheet", "A3", "Jane Smith") 
excel.setCell(file_id, "MainSheet", "B3", "Marketing")
excel.setCell(file_id, "MainSheet", "C3", 65000)

print("‚úÖ Added employee data")

// Read back some cells
let name1 = excel.getCell(file_id, "MainSheet", "A2")
let dept1 = excel.getCell(file_id, "MainSheet", "B2")
let salary1 = excel.getCell(file_id, "MainSheet", "C2")

print("Read back - Name: " + name1 + " Department: " + dept1 + " Salary: " + salary1)

// Test 4: Formula operations
print("")
print("üßÆ Test 4: Formula operations...")
excel.setCellFormula(file_id, "MainSheet", "D2", "=C2*0.1")
excel.setCellFormula(file_id, "MainSheet", "D3", "=C3*0.1")
excel.setCellFormula(file_id, "MainSheet", "C4", "=SUM(C2:C3)")
excel.setCellFormula(file_id, "MainSheet", "D4", "=SUM(D2:D3)")

let formula = excel.getCellFormula(file_id, "MainSheet", "C4")
print("Formula in C4: " + formula)

// Test 5: Range operations  
print("")
print("üìê Test 5: Range operations...")
let range_data = excel.getRange(file_id, "MainSheet", "A1:D4")
print("Range data (4x4):")
for let i = 0; i < range_data.length; i++ {
    print("  Row " + i + ":")
    let row = range_data[i]
    for let j = 0; j < row.length; j++ {
        print("    " + row[j])
    }
}

// Test 6: Row/Column operations
print("")
print("üìè Test 6: Row/Column operations...")
excel.insertRow(file_id, "MainSheet", 2)
print("‚úÖ Inserted row at position 2")

excel.setCell(file_id, "MainSheet", "A2", "Alice Brown")
excel.setCell(file_id, "MainSheet", "B2", "HR")
excel.setCell(file_id, "MainSheet", "C2", 60000)
excel.setCellFormula(file_id, "MainSheet", "D2", "=C2*0.1")
print("‚úÖ Added new employee data in inserted row")

// Test 7: Merge operations
print("")
print("üîó Test 7: Cell merge operations...")
excel.setCell(file_id, "SummarySheet", "A1", "Company Report")
excel.mergeCells(file_id, "SummarySheet", "A1:D1")
print("‚úÖ Merged header cells A1:D1 in SummarySheet")

// Test 8: File information
print("")
print("üìã Test 8: File information...")
let info = excel.getFileInfo(file_id)
print("File info retrieved successfully")

// Test 9: Save operations
print("")
print("üíæ Test 9: Save operations...")
excel.save(file_id)
print("‚úÖ Saved file")

let backup_id = excel.saveAs(file_id, "backup_workbook.xlsx")
print("‚úÖ Created backup with ID: " + backup_id)

// Test 10: Close and reopen
print("")
print("üîÑ Test 10: Close and reopen operations...")
excel.close(file_id)
excel.close(backup_id)
print("‚úÖ Closed original files")

// Reopen the file
let reopened_id = excel.open("test_workbook.xlsx")
print("‚úÖ Reopened file with ID: " + reopened_id)

// Verify data is still there
let name_check = excel.getCell(reopened_id, "MainSheet", "A3")
let salary_check = excel.getCell(reopened_id, "MainSheet", "C3")
print("Verified data - Name: " + name_check + " Salary: " + salary_check)

// Test 11: Summary operations
print("")
print("üìà Test 11: Creating summary sheet...")
excel.setCell(reopened_id, "SummarySheet", "A3", "Total Employees:")
excel.setCellFormula(reopened_id, "SummarySheet", "B3", "=COUNTA(MainSheet.A:A)-1")

excel.setCell(reopened_id, "SummarySheet", "A4", "Average Salary:")
excel.setCellFormula(reopened_id, "SummarySheet", "B4", "=AVERAGE(MainSheet.C:C)")

excel.setCell(reopened_id, "SummarySheet", "A5", "Total Payroll:")
excel.setCellFormula(reopened_id, "SummarySheet", "B5", "=SUM(MainSheet.C:C)+SUM(MainSheet.D:D)")

print("‚úÖ Added summary calculations")

// Final save and cleanup
excel.save(reopened_id)
excel.close(reopened_id)

print("")
print("üéâ Excel Module Test Complete!")
print("===============================")
print("‚úÖ All tests passed successfully")
print("üìÅ Created files: test_workbook.xlsx, backup_workbook.xlsx")
print("üí° Excel module is fully functional!")

// Test error handling
print("")
print("üõ°Ô∏è  Testing error handling...")
let error_result = excel.open("nonexistent_file.xlsx")
print("Attempted to open nonexistent file, result: " + error_result)

print("")
print("üîí Note: Password protection testing requires manual setup")
print("    To test password features:")
print("    1. Create a password-protected Excel file manually")
print("    2. Use excel.openWithPassword(file, password)")

print("")
print("üöÄ Excel module ready for production use!")